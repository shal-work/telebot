from telebot import types
import img_const

def register_commands(bot):
    @bot.callback_query_handler(func=lambda callback: callback.data == 'React_btn')
    def callback_msg(callback):
        id = callback.message.chat.id
        # bot.send_message(callback.message.chat.id, "–≠—Ç–∞ –æ–ø—Ü–∏—è –ø–æ React_btn")
        text1 = '<b>–°–∞–π—Ç—ã –Ω–∞ React</b>'
        text2 = '/react1- C–∞–π—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è'
        text3 = '/react2- C–∞–π—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ TypeScript '
        text4 = '/react3- –°–∞–π—Ç –æ–ø–∏—Å—ã–≤–∞—é—â–∏–π –∞–ª–≥–æ—Ä–∏—Ç–º  —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ React'
        text5 = '/react4- –õ–µ–Ω–¥–∏–Ω–≥ –Ω–∞ React'
        markup_inline = types.InlineKeyboardMarkup()
        btn_in_3 = types.InlineKeyboardButton('üîô –ù–∞–∑–∞–¥', callback_data='delete')
        markup_inline.add(btn_in_3)
        bot.send_message(id, text1 + '\n' + text2 + '\n'+ text3 +'\n' + text4 +'\n' + text5, parse_mode="HTML", reply_markup=markup_inline)

    @bot.message_handler(commands=['react1'])
    def react(message):
        markup_inline = types.InlineKeyboardMarkup()
        btn_in_1 = types.InlineKeyboardButton('–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç', url='https://shal-work.github.io/test')
        btn_in_2 = types.InlineKeyboardButton('–ù–∞ GitHub', url='https://github.com/shal-work/test')
        btn_in_3 = types.InlineKeyboardButton('üîô –ù–∞–∑–∞–¥', callback_data='delete')
        markup_inline.add(btn_in_1, btn_in_2)
        markup_inline.add(btn_in_3)
        # with open (img_const.react1, 'rb') as photo:
        #     bot.send_photo(message.chat.id, photo, caption='C–∞–π—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ React', parse_mode="HTML", reply_markup=markup_inline)
        text = 'C–∞–π—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ React'
        try:
            bot.send_photo(message.chat.id, img_const.react1, caption=text, parse_mode="HTML", reply_markup=markup_inline)
        except:
            with open(img_const.empty, 'rb') as photo:
                bot.send_photo(message.chat.id, photo, caption=text, parse_mode="HTML", reply_markup=markup_inline)


    @bot.message_handler(commands=['react2'])
    def react(message):
        markup_inline = types.InlineKeyboardMarkup()
        btn_in_1 = types.InlineKeyboardButton('–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç', url='https://shal-work.github.io/test-on-TypeScriptReact')
        btn_in_2 = types.InlineKeyboardButton('–ù–∞ GitHub', url='https://github.com/shal-work/test-on-TypeScriptReact')
        btn_in_3 = types.InlineKeyboardButton('üîô –ù–∞–∑–∞–¥', callback_data='delete')
        markup_inline.add(btn_in_1, btn_in_2)
        markup_inline.add(btn_in_3)
        # with open (img_const.react1, 'rb') as photo:
        #     bot.send_photo(message.chat.id, photo, caption='C–∞–π—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ TypeScriptReact', parse_mode="HTML", reply_markup=markup_inline)
        text = 'C–∞–π—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ TypeScriptReact'
        try:
            bot.send_photo(message.chat.id, img_const.react2, caption=text, parse_mode="HTML", reply_markup=markup_inline)
        except:
            with open(img_const.empty, 'rb') as photo:
                bot.send_photo(message.chat.id, photo, caption=text, parse_mode="HTML", reply_markup=markup_inline)


    @bot.message_handler(commands=['react3'])
    def react(message):
        markup_inline = types.InlineKeyboardMarkup()
        btn_in_1 = types.InlineKeyboardButton('–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç', url='https://github.com/shal-work/algorithm-on-React')
        btn_in_2 = types.InlineKeyboardButton('–ù–∞ GitHub', url='https://github.com/shal-work/algorithm-on-React')
        btn_in_3 = types.InlineKeyboardButton('üîô –ù–∞–∑–∞–¥', callback_data='delete')
        markup_inline.add(btn_in_1, btn_in_2)
        markup_inline.add(btn_in_3)
        # with open (img_const.react3, 'rb') as photo:
        #     bot.send_photo(message.chat.id, photo, caption='–ê–ª–≥–æ—Ä–∏—Ç–º —Å–æ–∑–¥–∞–Ω–∏—è —Å–∞–π—Ç–∞ –Ω–∞ React', parse_mode="HTML", reply_markup=markup_inline)
        text = '–ê–ª–≥–æ—Ä–∏—Ç–º —Å–æ–∑–¥–∞–Ω–∏—è —Å–∞–π—Ç–∞ –Ω–∞ React'
        try:
            bot.send_photo(message.chat.id, img_const.react3, caption=text, parse_mode="HTML", reply_markup=markup_inline)
        except:
            with open(img_const.empty, 'rb') as photo:
                bot.send_photo(message.chat.id, photo, caption=text, parse_mode="HTML", reply_markup=markup_inline)


    @bot.message_handler(commands=['react4'])
    def react(message):
        markup_inline = types.InlineKeyboardMarkup()
        btn_in_1 = types.InlineKeyboardButton('–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç', url='https://shal-work.github.io/test-task2/')
        btn_in_2 = types.InlineKeyboardButton('–ù–∞ GitHub', url='https://github.com/shal-work/test-task2')
        btn_in_3 = types.InlineKeyboardButton('üîô –ù–∞–∑–∞–¥', callback_data='delete')
        markup_inline.add(btn_in_1, btn_in_2)
        markup_inline.add(btn_in_3)
        text = '–õ–µ–Ω–¥–∏–Ω–≥ –ø–æ –∑–∞–¥–∞–Ω–∏—é –Ω–∞ React'
        try:
            bot.send_photo(message.chat.id, img_const.react4, caption=text, parse_mode="HTML", reply_markup=markup_inline)
        except:
            with open(img_const.empty, 'rb') as photo:
                bot.send_photo(message.chat.id, photo, caption=text, parse_mode="HTML", reply_markup=markup_inline)

    @bot.callback_query_handler(func=lambda callback: True)
    def callback_msg(callback):
        if callback.data == 'delete':
            bot.delete_message(callback.message.chat.id, callback.message.message_id)
