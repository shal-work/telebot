import telebot
from telebot import types

# import react
# import keyframes
# import wordpress
# import vue
# import php
# import charts
# import document
# import landing

import config, img_const, react, keyframes, wordpress, vue, php, charts, document, landing


bot = telebot.TeleBot(config.BOT_TOKEN)

@bot.message_handler(commands=['start'])
def start(message):
    text1 = 'üá∑üá∫ –ü—Ä–∏–≤–µ—Ç, '
    text2 = '–ó–¥–µ—Å—å –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–∏ –Ω–∞—Ä–∞–±–æ—Ç–∫–∏ –ø–æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ —Å–∞–π—Ç–æ–≤!'
    name = message.from_user.first_name if message.from_user.first_name else "–ù–µ–∑–Ω–∞–∫–æ–º–µ—Ü"
    markup_inline = types.InlineKeyboardMarkup()
    btn_in_1 = types.InlineKeyboardButton('–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç', url='https://shal-work.github.io/repository/')
    btn_in_2 = types.InlineKeyboardButton('–ü–æ–¥—Ä–æ–±–Ω–µ–µ', callback_data='Abou_btn')
    markup_inline.row(btn_in_1, btn_in_2)
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    btn_1 = types.KeyboardButton('üá∑üá∫ ‚úã –û–± –∞–≤—Ç–æ—Ä–µ')
    markup.add(btn_1)
    text = text1 + ' ' + name + '!'
    try:
        bot.send_photo(message.chat.id, img_const.start, caption=text, parse_mode="HTML", reply_markup=markup)
    except:
        with open(img_const.empty, 'rb') as photo:
            bot.send_photo(message.chat.id, photo, caption=text, parse_mode="HTML", reply_markup=markup)
    bot.send_message(message.chat.id,  text2, parse_mode="HTML", reply_markup=markup_inline)


@bot.message_handler(commands=['help'])
def help(message):
    text1 = '–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é —Ç–µ–±—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏ –Ω–∞ –ª—é–±—É—é –∏–∑ —ç—Ç–∏—Ö –∫–æ–º–∞–Ω–¥, –æ—Ç–ø—Ä–∞–≤—å –∏—Ö –≤—Ä—É—á–Ω—É—é –∏–ª–∏ –≤—ã–±–µ—Ä–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–º –º–µ–Ω—é'
    text2 = '<b>–ö–æ–º–∞–Ω–¥—ã11:</b>'
    text3 = '/start - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞'
    text4 = '/website - –°–ø–∏—Å–æ–∫ —Å–∞–π—Ç–æ–≤'
    text5 = '/help - –ü–æ–º–æ—â—å'
    bot.send_message(message.chat.id, text1 + '\n' + text2 + '\n'+ text3 +'\n' + text4 +'\n' + text5, parse_mode="HTML")


@bot.callback_query_handler(func=lambda callback: callback.data == 'Abou_btn')
def callback_msg(callback):
    message = callback.message
    # if callback.data == 'Abou_btn':
        # bot.send_message(callback.message.chat.id, "–≠—Ç–∞ –æ–ø—Ü–∏—è –ø–æ–∫–∞ –Ω–∞—Ö–æ–¥—Ç–∏—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")

    markup_inline = types.InlineKeyboardMarkup()
    btn_in_React = types.InlineKeyboardButton('React', callback_data='React_btn') #1
    btn_in_Keyframes = types.InlineKeyboardButton('Keyframes', callback_data='Keyframes_btn') #2
    btn_in_WordPress = types.InlineKeyboardButton('WordPress', callback_data='WordPress_btn') #3
    btn_in_Vue = types.InlineKeyboardButton('Vue', callback_data='Vue_btn')
    btn_in_PHP = types.InlineKeyboardButton('PHP', callback_data='PHP_btn')
    btn_in_Charts = types.InlineKeyboardButton('–ì—Ä–∞—Ñ–∏–∫–∏', callback_data='Charts_btn')
    btn_in_Document = types.InlineKeyboardButton('–î–æ–∫—É–º–µ–Ω—Ç', callback_data='Document_btn')
    btn_in_Landing = types.InlineKeyboardButton('–õ–µ–Ω–¥–∏–Ω–≥–∏', callback_data='Landing_btn')

    markup_inline.row(btn_in_React, btn_in_Keyframes)
    markup_inline.row(btn_in_WordPress, btn_in_Vue)
    markup_inline.row(btn_in_PHP, btn_in_Charts)
    markup_inline.row(btn_in_Document, btn_in_Landing)
    bot.send_message(message.chat.id, '<b>–ü–æ–¥—Ä–æ–±–Ω–µ–µ:</b>', parse_mode="HTML", reply_markup=markup_inline)


landing.register_commands(bot)#8
document.register_commands(bot)#7
charts.register_commands(bot)#6
php.register_commands(bot)#5
vue.register_commands(bot)#4
wordpress.register_commands(bot) #3
keyframes.register_commands(bot) #2
react.register_commands(bot) #1



@bot.message_handler(content_types=['text'])
def send_text(message):
    if message.text == 'üá∑üá∫ ‚úã –û–± –∞–≤—Ç–æ—Ä–µ':
        text = ' üá∑üá∫ –ü—Ä–æ—Å—Ç–æ - —É–≤–ª–µ—á–µ–Ω–∏–µ. –ü—Ä–æ—à–µ–ª –∫—É—Ä—Å—ã –ø–æ –ø—Ä–∞–∫—Ç–∏–∫–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ HTML / CSS, BOOTSTRAP , PHP / MySQL, Linux / GIT, CodeIgniter, JavaScript / jQuery, WordPress. –ò–∑—É—á–∞—é Vue, React, TypeScript-React. –†–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–∫–ª–∞–¥—ã–≤–∞—é –Ω–∞ GitHub, —Å—Å—ã–ª–∫–∞ https://shal-work.github.io/repository/. –í—Å–µ –Ω–µ–ª—å–∑—è –∑–∞–ø–æ–º–Ω–∏—Ç—å, –Ω–æ –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –æ—Ç–≤–µ—Ç—ã –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ, –≥–ª–∞–≤–Ω–æ–µ –∑–Ω–∞—Ç—å –∫–∞–∫ —ç—Ç–∏–º –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è!'
        # with open('./img/About_AlekseyHtml_bot.jpg', 'rb') as photo:
        try:
            bot.send_photo(message.chat.id, img_const.about, caption=text, parse_mode="HTML")
        except:
            with open(img_const.empty, 'rb') as photo:
                bot.send_photo(message.chat.id, photo, caption=text, parse_mode="HTML")



@bot.message_handler(content_types='text')
def send_text(message):
    bot.send_message(message.chat.id, message)
    if message.text=="React":
        bot.send_message(message.chat.id, "–≠—Ç–æ")

bot.infinity_polling()
